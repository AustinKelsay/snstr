name: Build, Test, and Release

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type (patch, minor, major)'
        required: false
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Lint
        run: npm run lint
        continue-on-error: ${{ matrix.node-version != '20.x' }}
      
      - name: Run tests
        run: npm test
      
      - name: Run test coverage
        run: npm run test:coverage
      
      - name: Build library
        run: npm run build
      
      - name: Build examples
        run: npm run build:examples
      
      - name: Archive build artifacts
        if: matrix.node-version == '20.x'
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: |
            dist
            dist-examples

  release:
    needs: build-and-test
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
      
      - name: Create version bump PR (manual trigger)
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          npm version ${{ github.event.inputs.release_type }} -m "Bump version to %s [skip ci]"
          git push
          NEW_VERSION=$(node -p "require('./package.json').version")
          git tag -a "v$NEW_VERSION" -m "Release v$NEW_VERSION"
          git push --tags
      
      - name: Get package version
        id: package_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || format('v{0}', steps.package_version.outputs.version) }}
          name: Release ${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || format('v{0}', steps.package_version.outputs.version) }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            dist/**/*
            dist-examples/**/*
      
      - name: Run build before publish
        run: npm run build
      
      - name: Publish to npm
        if: success()
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} 